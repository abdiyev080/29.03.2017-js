1)Elimizde bir obyekt var onun metodu ve propertisi var onu herdefe defe deyiwende kodu tekrar
yazmamaq ucun prototypal inheritancedan istifade olunur.
-----------------------------------------------------

2) Baglayici bos deyisenlere mudaxile eden funksiyadi. 
Baglayici eyni anda 3 gorunuw sahesine kecid ede bilir:
   1)Oz goruw sahesine  (deyiwenler)
    2)Xarici funksiyanin gorunuw sahesine 
     3)Qlobal gor prounuw sahesine
-----------------------------------------------------

3) x-in typeof yazanda true , x==='object'yazanda false qaytarir.
-----------------------------------------------------
4) iwlemir 
-----------------------------------------------------
5)‘===’ – deyerini ve novunu muqaise edir;
  ‘==’ – deyerini muqaise edir.
-----------------------------------------------------
6)5 Data novleri destetleyir number, string, boolean, null, undefined.
-----------------------------------------------------
7)123;33
-----------------------------------------------------
8)Sade Javascript, sayti javascriptden asli etmekdi.
-----------------------------------------------------
9)Undifined ve Null
 Undifined odurki deyiwen teyin edilib ama deyer qebul etmeyib 
 Null da ise deyiwen teyin edile biler ama hec bir deyeri olmaz
-----------------------------------------------------
10) If,else,else if switch;
-----------------------------------------------------
11) Eger riyazi emiliyat sona sona catmirsa onda bize xususi deyer qayidir NaN (Not a Number)
    Meselen: 0/0=NaN	
-----------------------------------------------------
12) Funksiya this istifade edirse  o obyektle isleyir her bir funksiya "this" saxlaya bilir
    "this" funksiyanin cagirlisi zaman teyin olunur.
-----------------------------------------------------
13) UNDEFINED: deyiwen var ile teyin olunur ama deyeri olmur
    not defined :  deyiwen teyin olunmur
-----------------------------------------------------
14)
-----------------------------------------------------
15)OOP ve funksional proqramlasdirma
-----------------------------------------------------

16)Funsional proqramlasdirma proqramin funksiyalarla yazilmasi yoludur
Bu zaman ortaq veziyyetlerden,deyisken melumatlardan ve kenar effektlerden uzaq durulur.
Funksional proqramlasdirma deklarativ yox imperativdir ve proqramin gedisi funsiyalarla yerine yetirilir.

-----------------------------------------------------
17)Classical inheritance:ekzemplarlar class-lardan alir podclass elaqesi qurur.Ekzemplarlar adeten konstruktor vasitesile qurulur 
ve yeni acar sozu vasitesile yaradilir.
Classical inheritance ES6 class acar sozunden istifade etmeye de biler
-----------------------------------------------------
Inheritance:ekzemplarlar diger bir obyektden alir.Adeten hazir funksiyalarla ve ya Object.create() le yaradilir.
-----------------------------------------------------
18)OOP musbet cehetleri:

her sey object weklinde olur;
kod tekrarinin qarsisini alir;
rahat modifikasiya etmeye imkan verir;

OOP menfi cehetleri:

cox emek teleb edir;
murekkebdi;
cox yaddas tutur;
her problemin helline uygun deyil;

-----------------------------------------------------
19)hecvaxt

-----------------------------------------------------
20)Her bir prototipin inheritance oz istifade hallari var.Onlar ayri faydaliliqdadirlar.
Onlar vasitesile has-a , uses-a ve ya can-do elaqeleri yaradilir hansiki class inheritance-de yaradilan “is-a” elaqesinden ferqlenir.

-----------------------------------------------------
21)“is-a” elaqesi yerine “can-do”,”has-a” yadaki “uses-a” elaqelesinden istifade etmek olar.

-----------------------------------------------------
24)Sinxron proqramlasdirmada kod ardicil yazilir yuxari setd?n blocklanmaya 
Bu emeliyyatlara misal olaraq sebekesorgularini ve disk giris-cixis emeliyyatlarini misal gostermke olar.